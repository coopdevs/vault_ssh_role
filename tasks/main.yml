---
# tasks file for vault_ssh_setup
- name: Ensure dependencies are installed
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "{{ dependencies }}"

- name: Ensure sshd is running
  service:
    name: sshd
    state: started
    enabled: true

- name: Download Vault's public key
  get_url:
    url: "{{ vault_public_key_url }}"
    dest: "/etc/ssh/trusted-user-ca-keys.pem"
    mode: "0644"

- name: Check if sshd_config is configured to use the trusted CA keys
  command: "grep -q '^TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem' /etc/ssh/sshd_config"
  register: trusted_user_ca_keys_configured
  changed_when: false
  failed_when: false

- name: Configure sshd to use the trusted CA keys
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    mode: "0644"
  notify: restart ssh
  when: not trusted_user_ca_keys_configured.stdout

- name: Ensure PubkeyAuthentication is enabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?PubkeyAuthentication"
    line: "PubkeyAuthentication yes"
    state: present
  notify: restart ssh

- name: Ensure AuthorizedPrincipalsFile is configured
  file:
    path: "/etc/ssh/auth_principals"
    state: directory
    mode: "0755"
  when: hardening | default(False) | bool

- name: Check if exists the authorized_principals_file for each user
  stat:
    path: "{{ authorized_principals_file | replace('%u', item) }}"
  loop: "{{ users_list }}"
  register: authorized_principals_file_exists
  when: hardening | default(False) | bool

- name: Create authorized_principals_file for each user
  file:
    path: "{{ authorized_principals_file | replace('%u', item) }}"
    state: touch
    mode: '0644'
  loop: "{{ users_list }}"
  when: authorized_principals_file_exists.results | rejectattr('stat.exists') | list | length > 0


- name: Configure AuthorizedPrincipalsFile
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthorizedPrincipalsFile'
    line: 'AuthorizedPrincipalsFile /etc/ssh/auth_principals/%u'
    state: present
  notify: restart sshd
  when: hardening | default(False) | bool
